#textdomain wrw
# Author Blaker_BR

# Handles expirience gain

# Sets multiplier for melee
#define WRW_APPLY_MELEE_EXP_GAIN UNIT_ID OPPONENT_LEVEL_DEBT TOTAL_DAMAGE
{WRW_APPLY_EXP_GAIN {UNIT_ID} {OPPONENT_LEVEL_DEBT} {TOTAL_DAMAGE} 0.2}
#enddef

# Sets multiplier for ranged
#define WRW_APPLY_RANGED_EXP_GAIN UNIT_ID OPPONENT_LEVEL_DEBT TOTAL_DAMAGE
{WRW_APPLY_EXP_GAIN {UNIT_ID} {OPPONENT_LEVEL_DEBT} {TOTAL_DAMAGE} 0.1}
#enddef

# Calculates and apply experience
#define WRW_APPLY_EXP_GAIN UNIT_ID OPPONENT_LEVEL_DEBT TOTAL_DAMAGE EXP_MULTIPLIER

# Sets base Experience gain
{VARIABLE experience_gain {TOTAL_DAMAGE}}
{VARIABLE_OP experience_gain multiply {EXP_MULTIPLIER}}
{VARIABLE_OP experience_gain round ceil}

# Checks for ambitious and human ambition traits
[if]
    [have_unit]
        id={UNIT_ID}
        trait=wrw_ambitious
    [/have_unit]

    [then]
        {VARIABLE_OP experience_gain add 1}
    [/then]

    [elseif]
        [have_unit]
            id={UNIT_ID}
            trait=wrw_human_ambition
        [/have_unit]
    
        [then]
            {VARIABLE_OP experience_gain add 2}
        [/then]
    [/elseif]
[/if]

# Checks for minimal experience
[if]
    {VARIABLE_CONDITIONAL {TOTAL_DAMAGE} less_than 1}

    [then]
        {VARIABLE experience_gain 1}
    [/then]

    [else]
        # Discounts opponent level as it is given by the game engine if any damage is dealt
        {VARIABLE_OP experience_gain sub {OPPONENT_LEVEL_DEBT}}
    [/else]
[/if]

# Gives experience
[modify_unit]
    [filter]
        id={UNIT_ID}
    [/filter]
        
    [effect]
        apply_to=experience
        increase=$experience_gain
    [/effect]
[/modify_unit]

# Variable clean up
{CLEAR_VARIABLE experience_gain}
#enddef