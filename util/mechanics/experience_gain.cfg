#textdomain wrw
# Author: BlakerBR

# Attacking unit receives twice their opponent level and either may receive 1 extra if it has less Veterancy
# than the other, this too will be doubled for the attacking unit.
#
# Killing an unit with Veterancy, gives 2 extra exp per Veterancy

# Combat exp gain
[event]
    name=attack end
    id=wrw_experience_gain
    first_time_only=no

    [filter]
        formula="self.hitpoints > 0"
    [/filter]

    [filter_second]
        formula="self.hitpoints > 0"
    [/filter_second]

    # Base exp gain
    {VARIABLE unit_exp_gain $second_unit.level}
    {VARIABLE second_unit_exp_gain 0}

    # Checks for Veterancy
    [if]
        {VARIABLE_CONDITIONAL unit.modifications.advancement.length less_than $second_unit.modifications.advancement.length}

        [then]
            {VARIABLE_OP unit_exp_gain add 2}
        [/then]

        [elseif]
            {VARIABLE_CONDITIONAL unit.modifications.advancement.length greater_than $second_unit.modifications.advancement.length}

            [then]
                {VARIABLE_OP second_unit_exp_gain add 1}
            [/then]
        [/elseif]
    [/if]
    
    # Applies experience to attacker
    {WRW_APPLY_EXP_GAIN unit unit_exp_gain}
        
    # Applies experience to defender
    {WRW_APPLY_EXP_GAIN second_unit second_unit_exp_gain}
[/event]

# Kill exp gain
[event]
    name=die
    id=wrw_experience_gain
    first_time_only=no

    # Checks if killer has lower Veterancy
    [if]
        {VARIABLE_CONDITIONAL unit.modifications.advancement.length greater_than $second_unit.modifications.advancement.length}

        [then]
            # Calculates extra Experience
            {VARIABLE exp_gain $unit.modifications.advancement.length}
            {VARIABLE_OP exp_gain multiply 2}

            # Applies experience to killer
            {WRW_APPLY_EXP_GAIN second_unit exp_gain}
        [/then]
    [/if]
[/event]
