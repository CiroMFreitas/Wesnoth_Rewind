#textdomain wrw
# Author: BlakerBR

# Store current hitpoints percentage before advancement
[event]
    name=wrw_pre_advance_store_current_hp_percentage
    first_time_only=no
    
    {VARIABLE current_hp_percentage $unit.hitpoints}
    {VARIABLE_OP current_hp_percentage divide $unit.max_hitpoints}
[/event]

# Gives experience based on damage dealt
[event]
    name=wrw_post_advance_hp_handler
    first_time_only=no
    
    # Gets expected post advancement hp
    {VARIABLE expected_post_advancement_hp $unit.max_hitpoints}
    {VARIABLE_OP expected_post_advancement_hp multiply $current_hp_percentage}

    # gets and gives post advancement healing
    {VARIABLE post_advancement_healing $unit.max_hitpoints}
    {VARIABLE_OP post_advancement_healing multiply 0.2}
    {VARIABLE_OP expected_post_advancement_hp add $post_advancement_healing}

    # Gets hitpoints difference
    {VARIABLE post_advancement_hp_difference $unit.max_hitpoints}
    {VARIABLE_OP post_advancement_hp_difference sub $expected_post_advancement_hp}

    # Applies the diffrence if higher than 0, otherwise game will already full heal the advancing unit
    [if]
        {VARIABLE_CONDITIONAL post_advancement_hp_difference greater_than 0}

        [then]
            [modify_unit]
                [filter]
                    id=$unit.id
                [/filter]
        
                [effect]
                    apply_to=hitpoints
                    increase=-$post_advancement_hp_difference
                [/effect]
            [/modify_unit]
        [/then]
    [/if]

    # Clean up
    {CLEAR_VARIABLE current_hp_percentage}
    {CLEAR_VARIABLE expected_post_advancement_hp}
    {CLEAR_VARIABLE post_advancement_healing}
    {CLEAR_VARIABLE post_advancement_hp_difference}
[/event]